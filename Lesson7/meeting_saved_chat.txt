20:03:11 –û—Ç –í–ª–∞–¥ –ü–ª–∞—Ç–∏—Ü–∏–Ω  –∫–æ–º—É  –í—Å–µ:
	–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –ú–∞—Ä–∏—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞!
20:03:32 –û—Ç Gulliver  –∫–æ–º—É  –í—Å–µ:
	–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ
20:11:03 –û—Ç –ö–∞–º–∏–ª—å –ú–∞–Ω–∞–ø–æ–≤  –∫–æ–º—É  –í—Å–µ:
	–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ –≤—Å–µ–º –∏ –ú–∞—Ä–∏—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞. –û–±—ä—è—Å–Ω–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞. –ö–æ–≥–¥–∞ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å –º–∞—Å—Å–∏–≤–∞–º–∏ —Å–æ–∑–¥–∞—ë–º –º–µ—Ç–æ–¥—ã. –û–±—ä—è—Å–Ω–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ª–æ–≥–∏–∫—É, –∑–∞—á–µ–º —Å–æ–∑–¥–∞–≤–∞—Ç—å 2 –∏–ª–∏ 3 –º–µ—Ç–æ–¥–∞ —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞—Ç—å —Å –º–∞—Å—Å–∏–≤–∞–º–∏. –°–ø–∞—Å–∏–±–æ!
20:13:19 –û—Ç Renat  –∫–æ–º—É  –í—Å–µ:
	—Ñ—É–Ω–∫—Ü–∏—è –∏ –º–µ—Ç–æ–¥ —ç—Ç–æ –æ–¥–Ω–æ –∏ —Ç–æ–∂–µ? –Ω–∏–∫–∞–∫ –Ω–µ –ø–æ–π–º—É –≤ —á–µ–º –æ—Ç–ª–∏—á–∏–µ
20:13:39 –û—Ç –ö–∞–º–∏–ª—å –ú–∞–Ω–∞–ø–æ–≤  –∫–æ–º—É  –í—Å–µ:
	—Ö–æ—Ç—å —É–±–µ–π –¥–æ —Å–∏—Ö –ø–æ—Ä –Ω–µ –º–æ–≥—É –ø–æ–Ω—è—Ç—å –ª–æ–≥–∏–∫—É return. –ö—É–¥–∞ –æ–Ω –µ–≥–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä-—Ç? –í —Ç–µ–ª–æ?–ò–∑–≤–∏–Ω–∏—Ç–µ —Ä–µ–±—è—Ç–∞
20:14:04 –û—Ç –ö–∞–º–∏–ª—å –ú–∞–Ω–∞–ø–æ–≤  –∫–æ–º—É  –í—Å–µ:
	Console.Write –ø–æ–Ω—è—Ç–µ–Ω –æ–Ω –µ–≥–æ –≤—ã–≤–æ–¥–∏—Ç
20:15:11 –û—Ç Evgeniy  –∫–æ–º—É  –í—Å–µ:
	–µ—Å–ª–∏ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —á—Ç–æ-—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è –¥–µ–ª–∞—Ç—å –≤–Ω–µ –≤—É–Ω–∫—Ü–∏–∏, —Ç–æ –Ω—É—à–µ–Ω —Ä–µ—Ç–µ—Ä–Ω, –µ—Å–ª–∏ –∞–ø—Ä–æ—Å—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –º–æ–∂–Ω–æ –≤–æ–π–¥–æ–º
20:15:24 –û—Ç Evgeniy  –∫–æ–º—É  –í—Å–µ:
	—Ñ*
20:16:11 –û—Ç –ö–∞–º–∏–ª—å –ú–∞–Ω–∞–ø–æ–≤  –∫–æ–º—É  –í—Å–µ:
	–≤ —Ç–µ–ª–µ void –≤–µ–¥—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ return...
20:19:24 –û—Ç –ö–∞–º–∏–ª—å –ú–∞–Ω–∞–ø–æ–≤  –∫–æ–º—É  –í—Å–µ:
	–≤ –ø—Ä–∏–Ω—Ü–∏–ø–µ –ø–æ–Ω—è—Ç–Ω–æ —Å–ø–∞—Å–∏–±–æ
20:20:21 –û—Ç –ö–∞–º–∏–ª—å –ú–∞–Ω–∞–ø–æ–≤  –∫–æ–º—É  –í—Å–µ:
	üò®
20:25:10 –û—Ç –ò–ª—å—è –ñ–∞—Ä–∫–æ–≤  –∫–æ–º—É  –í—Å–µ:
	Console.Write("–°–∫–æ–ª—å–∫–æ —á–∏—Å–µ–ª?");	int M = int.Parse(Console.ReadLine()!);	int res=0;		for (int i = 1; i <= M; i++)	{	    Console.WriteLine($"–í–≤–µ–¥–∏—Ç–µ {i} —á–∏—Å–ª–æ ");	    int a = int.Parse(Console.ReadLine()!);	  	    if (a==0)	    {           	                Console.WriteLine("–í–≤–µ–¥–µ–Ω–æ–µ —á–∏—Å–ª–æ —Ä–∞–≤–Ω–æ 0");	                break;	    } 	    	    else if (a>0) res=res+1;	}          	    			Console.WriteLine($"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª = {res} ");
20:28:25 –û—Ç –ú–∞—Ä–∏—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞ –ê–Ω–¥—Ä–µ–µ–≤–∞  –∫–æ–º—É  –í—Å–µ:
	https://studok.net/obrazovanie-i-kommunikacii/vopros-kak-vychislit-tochku-peresechenija-dvuh-prjamyh/
20:29:46 –û—Ç –ò–ª—å—è –ñ–∞—Ä–∫–æ–≤  –∫–æ–º—É  –í—Å–µ:
	//–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞–π–¥—ë—Ç —Ç–æ—á–∫—É –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è –¥–≤—É—Ö –ø—Ä—è–º—ã—Ö, –∑–∞–¥–∞–Ω–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏—è–º–∏:	// y = k1 * x + b1, y = k2 * x + b2; –∑–Ω–∞—á–µ–Ω–∏—è b1, k1, b2 –∏ k2 –∑–∞–¥–∞—é—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.	Console.WriteLine("–≤–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ b1");	double b1 = double.Parse(Console.ReadLine()!);	Console.WriteLine("–≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ k1");	double k1 = double.Parse(Console.ReadLine()!);	Console.WriteLine("–≤–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ b2");	double b2 = double.Parse(Console.ReadLine()!);	Console.WriteLine("–≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ k2");	double k2 = double.Parse(Console.ReadLine()!);		double x = (-b2 + b1)/(-k1 + k2);	double y = k2 * x + b2;		Console.WriteLine($"–¥–≤–µ –ø—Ä—è–º—ã–µ –ø–µ—Ä–µ—Å–µ–∫—É—Ç—Å—è –≤ —Ç–æ—á–∫–µ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ X: {x}, Y: {y}");
20:31:28 –û—Ç –ö–∞–º–∏–ª—å –ú–∞–Ω–∞–ø–æ–≤  –∫–æ–º—É  –í—Å–µ:
	from to —á—Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç?
20:31:41 –û—Ç –ò–ª—å—è –ñ–∞—Ä–∫–æ–≤  –∫–æ–º—É  –í—Å–µ:
	//–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å	//–∫–æ–ø–∏—é –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ —Å –ø–æ–º–æ—â—å—é –ø–æ—ç–ª–µ–º–µ–Ω—Ç–Ω–æ–≥–æ	//–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è. 		Console.Write("–ö–æ–ª-–≤–æ —Å—Ç—Ä–æ–∫ ");	int row = int.Parse(Console.ReadLine()!);	Console.Write("–ö–æ–ª-–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ ");	int col = int.Parse(Console.ReadLine()!);		int[,] matrix = new int[row, col];	int[,] copy = new int[row, col];		void FillArray(int[,] matrix)	{	    for (int i = 0; i < matrix.GetLength(0); i++)	    {	        for (int j = 0; j < matrix.GetLength(1); j++)	        {	            matrix[i, j] = new Random().Next(1, 10);	        }		    }	}
20:31:58 –û—Ç –ò–ª—å—è –ñ–∞—Ä–∫–æ–≤  –∫–æ–º—É  –í—Å–µ:
	void CopyArray(int[,] copy)	{   for (int i = 0; i <= row-1; i++)	    {	        for (int j = 0; j < col; j++)	            {	            copy[i,j] = matrix[i,j];	            }	    }	}				void PrintArray(int[,] matrix)	{	    for (int i = 0; i < matrix.GetLength(0); i++)	    {	        for (int j = 0; j < matrix.GetLength(1); j++)	        {	            Console.Write($"{matrix[i, j]} ");	        }	        Console.WriteLine();	    }	}
20:31:58 –û—Ç –ò–ª—å—è –ñ–∞—Ä–∫–æ–≤  –∫–æ–º—É  –í—Å–µ:
	void PrintCopy(int[,] copy)	{	    for (int i = 0; i < copy.GetLength(0); i++)	    {	        for (int j = 0; j < copy.GetLength(1); j++)	        {	            Console.Write($"{copy[i, j]} ");	        }	        Console.WriteLine();	    }	}		FillArray(matrix);	PrintArray(matrix);	Console.WriteLine();	CopyArray(copy);	PrintCopy(copy);
20:34:35 –û—Ç –ò–ª—å—è –ñ–∞—Ä–∫–æ–≤  –∫–æ–º—É  –í—Å–µ:
	void PrintArray(int[,] matrix)	{	    for (int i = 0; i < matrix.GetLength(0); i++)	    {	        for (int j = 0; j < matrix.GetLength(1); j++)	        {	            Console.Write($"{matrix[i, j]} ");	        }	        Console.WriteLine();	    }	}
20:35:48 –û—Ç –ú–∞—Ä–∏—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞ –ê–Ω–¥—Ä–µ–µ–≤–∞  –∫–æ–º—É  –í—Å–µ:
	üòá
20:36:01 –û—Ç –ú–∞—Ä–∏—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞ –ê–Ω–¥—Ä–µ–µ–≤–∞  –∫–æ–º—É  –í—Å–µ:
	void Print(int[,] arr)	{	    int row_size = arr.GetLength(0);	    int column_size = arr.GetLength(1);		    for (int i = 0; i < row_size; i++)	    {	        for (int j = 0; j < column_size; j++)        	            Console.Write($" {arr[i, j], 4} ");        	        Console.WriteLine();       	    }	    Console.WriteLine();	}		int[,] MassNums(int row, int column, int from, int to)	{	    int[,] arr = new int[row, column];		    for (int i = 0; i < row; i++)      	        for (int j = 0; j < column; j++)        	            arr[i, j] = new Random().Next(from, to + 1);                	    	    return arr;	}
20:36:12 –û—Ç –ú–∞—Ä–∏—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞ –ê–Ω–¥—Ä–µ–µ–≤–∞  –∫–æ–º—É  –í—Å–µ:
	int[,] CopyMass(int[,] arr)	{	    int row_size = arr.GetLength(0);	    int column_size = arr.GetLength(1);	    int[,] new_arr = new int[row_size, column_size];	    	    for (int i = 0; i < row_size; i++)    	        for (int j = 0; j < column_size; j++)        	            new_arr[i, j] = arr[i, j];               	    	    return new_arr;	}		Console.Write("Enter the number of rows: ");	int row_num = int.Parse(Console.ReadLine()!);	Console.Write("Enter the number of columns: ");	int column_num = int.Parse(Console.ReadLine()!);		Console.Write("Enter the min number of massive ");	int start = int.Parse(Console.ReadLine()!);	Console.Write("Enter the max number of massive ");	int stop = int.Parse(Console.ReadLine()!);		int[,] mass = MassNums(row_num, column_num, start, stop);		Print(mass);	int[,] arr_new = CopyMass(mass);	Print(arr_new);
20:41:46 –û—Ç –ò–ª—å—è –ñ–∞—Ä–∫–æ–≤  –∫–æ–º—É  –í—Å–µ:
	void PrintArray(int[,] matrix)	{	    for (int i = 0; i < matrix.GetLength(0); i++)	    {	        for (int j = 0; j < matrix.GetLength(1); j++)	        {	            Console.Write($"{matrix[i, j]} ");	        }	        Console.WriteLine();	    }	}	void FillArray(int[,] matrix)	{	    for (int i = 0; i < 3; i++)	    {	        for (int j = 0; j < 4; j++)	        {	            matrix[i, j] = i+j;	        }		    }	}	FillArray(matrix);	PrintArray(matrix);
20:42:32 –û—Ç Gulliver  –∫–æ–º—É  –í—Å–µ:
	void PrintArray(int[,] matr)	{	    for (int i = 0; i < matr.GetLength(0); i++)	    {	        for (int j = 0; j < matr.GetLength(1); j++)	        {	            Console.Write($"{matr[i, j],3} ");	        }	        Console.WriteLine();	    }	}		void FillArray(int[,] matr)	{	    Console.WriteLine("\n–ú–∞—Å—Å–∏–≤:");	    for (int i = 0; i < matr.GetLength(0); i++)	    {	        for (int j = 0; j < matr.GetLength(1); j++)	        {	            matr[i,j] = i+j;	        }	    }	}				Console.WriteLine("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ ");	int m = int.Parse(Console.ReadLine()!);	Console.WriteLine("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ ");	int n = int.Parse(Console.ReadLine()!);	int[,] matrix = new int[m, n];	FillArray(matrix);	PrintArray(matrix);
20:43:37 –û—Ç –ò–ª—å—è –ñ–∞—Ä–∫–æ–≤  –∫–æ–º—É  –í—Å–µ:
	Console.Write("–ö–æ–ª-–≤–æ —Å—Ç—Ä–æ–∫ ");	int row = int.Parse(Console.ReadLine()!);	Console.Write("–ö–æ–ª-–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ ");	int col = int.Parse(Console.ReadLine()!);	int[,] matrix = new int[row, col];		void PrintArray(int[,] matrix)	{	    for (int i = 0; i < matrix.GetLength(0); i++)	    {	        for (int j = 0; j < matrix.GetLength(1); j++)	        {	            Console.Write($"{matrix[i, j]} ");	        }	        Console.WriteLine();	    }	}	void FillArray(int[,] matrix)	{	    for (int i = 0; i < row; i++)	    {	        for (int j = 0; j < col; j++)	        {	            matrix[i, j] = i+j;	        }		    }	}	FillArray(matrix);	PrintArray(matrix);
20:44:33 –û—Ç –ö–∞–º–∏–ª—å –ú–∞–Ω–∞–ø–æ–≤  –∫–æ–º—É  –í—Å–µ:
	—Ç–µ–∫—Å—Ç –∑–∞–¥–∞–Ω–∏—è –º–æ–∂–Ω–æ –ø–∂
20:44:42 –û—Ç –ú–∞—Ä–∏—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞ –ê–Ω–¥—Ä–µ–µ–≤–∞  –∫–æ–º—É  –í—Å–µ:
	// 1. –ó–∞–¥–∞–π—Ç–µ –¥–≤—É–º–µ—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤ —Ä–∞–∑–º–µ—Ä–∞ m –Ω–∞ n,	//    –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –º–∞—Å—Å–∏–≤–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ —Ñ–æ—Ä–º—É–ª–µ: A‚Çò‚Çô = m+n.	//    –í—ã–≤–µ–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –Ω–∞ —ç–∫—Ä–∞–Ω.
20:44:49 –û—Ç –ö–∞–º–∏–ª—å –ú–∞–Ω–∞–ø–æ–≤  –∫–æ–º—É  –í—Å–µ:
	—Å–ø–∞—Å–∏–±–æ
20:48:54 –û—Ç –ê–Ω–¥—Ä–µ–π –ï–ª–∏—Å–µ–µ–≤  –∫–æ–º—É  –í—Å–µ:
	void Print(int[,] arr)	{	    int row_size = arr.GetLength(0);	    int column_size = arr.GetLength(1);		    for (int i = 0; i < row_size; i++)	    {	        for (int j = 0; j < column_size; j++)        	            Console.Write($" {arr[i, j], 4} ");        	        Console.WriteLine();       	    }	    Console.WriteLine();	}		int[,] MassNums(int row, int column)	{	    int[,] arr = new int[row, column];		    for (int i = 0; i < row; i++)      	        for (int j = 0; j < column; j++)        	            arr[i, j] = i+j;                	    	    return arr;	}		Console.Write("Enter the number of rows: ");	int row_num = int.Parse(Console.ReadLine()!);	Console.Write("Enter the number of columns: ");	int column_num = int.Parse(Console.ReadLine()!);		int[,] mass = MassNums(row_num, column_num);	Console.WriteLine();	Print(mass);
20:49:04 –û—Ç Renat  –∫–æ–º—É  –í—Å–µ:
	33
20:55:43 –û—Ç Gulliver  –∫–æ–º—É  –í—Å–µ:
	// –ó–∞–¥–∞–π—Ç–µ –¥–≤—É–º–µ—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤. –ù–∞–π–¥–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã, —É –∫–æ—Ç–æ—Ä—ã—Ö	// –æ–±–µ –ø–æ–∑–∏—Ü–∏–∏ —á—ë—Ç–Ω—ã–µ, –∏ –∑–∞–º–µ–Ω–∏—Ç–µ —ç—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ –∏—Ö –∫–≤–∞–¥—Ä–∞—Ç—ã.		void PrintArray(int[,] matr)	{	    for (int i = 0; i < matr.GetLength(0); i++)	    {	        for (int j = 0; j < matr.GetLength(1); j++)	        {	            Console.Write($"{matr[i, j], 3} ");	        }	        Console.WriteLine();	    }	}		void FillArray(int[,] matr, int min, int max)	{	    Console.WriteLine("\n–ú–∞—Å—Å–∏–≤:");	    for (int i = 0; i < matr.GetLength(0); i++)	    {	        for (int j = 0; j < matr.GetLength(1); j++)	        {	            matr[i, j] = new Random().Next(min, max + 1);	        }	    }	}
20:55:48 –û—Ç Gulliver  –∫–æ–º—É  –í—Å–µ:
	void SqareOfEven(int[,] array)	{	    for (int i = 0; i < array.GetLength(0); i++)	    {	        for (int j = 0; j < array.GetLength(1); j++)	        {	            if (i % 2 == 1 && j % 2 == 1)	                array[i, j] = array[i, j] * array[i, j];	        }	    }	}		Console.WriteLine("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ ");	int m = int.Parse(Console.ReadLine()!);	Console.WriteLine("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ ");	int n = int.Parse(Console.ReadLine()!);	int[,] matrix = new int[m, n];	Console.Write("–í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ : ");	int start = int.Parse(Console.ReadLine()!);	Console.Write("–í–≤–µ–¥–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ : ");	int stop = int.Parse(Console.ReadLine()!);	FillArray(matrix, start, stop);	PrintArray(matrix);	SqareOfEven(matrix);	Console.WriteLine("\n–ù–æ–≤—ã–π –º–∞—Å—Å–∏–≤: ");	PrintArray(matrix);
21:05:44 –û—Ç –ú–∏—Ö–∞–∏–ª  –∫–æ–º—É  –í—Å–µ:
	// –ó–∞–¥–∞–π—Ç–µ –¥–≤—É–º–µ—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤. –ù–∞–π–¥–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã, —É –∫–æ—Ç–æ—Ä—ã—Ö	// –æ–±–µ –ø–æ–∑–∏—Ü–∏–∏ —á—ë—Ç–Ω—ã–µ, –∏ –∑–∞–º–µ–Ω–∏—Ç–µ —ç—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ –∏—Ö –∫–≤–∞–¥—Ä–∞—Ç—ã.			void PrintArray(int[,] matr)	{	    for (int i = 0; i < matr.GetLength(0); i++)	    {	        for (int j = 0; j < matr.GetLength(1); j++)	        {	            System.Console.Write($"{matr[i, j]} ");	        }	        System.Console.WriteLine();	    }	}		void FillArray(int[,] matr)	{	    for (int i = 0; i < matr.GetLength(0); i++)	    {	        for (int j = 0; j < matr.GetLength(1); j++)	        {	            matr[i, j] = new Random().Next(1, 10);	        }	    }		}
21:05:50 –û—Ç –ú–∏—Ö–∞–∏–ª  –∫–æ–º—É  –í—Å–µ:
	void EvenElement(int[,] arr)	{	    for (int i = 1; i < arr.GetLength(0); i += 2)	    {	        for (int j = 0; j < arr.GetLength(1); j += 2)	        {	            arr[i, j] *= arr[i, j];	        }	    }	}				Console.WriteLine("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ ");	int m = int.Parse(Console.ReadLine()!);	Console.WriteLine("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ ");	int n = int.Parse(Console.ReadLine()!);	int[,] matrix = new int[m, n];		FillArray(matrix);	PrintArray(matrix);	System.Console.WriteLine();	EvenElement(matrix);	PrintArray(matrix);
21:08:25 –û—Ç –ú–∞—Ä–∏—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞ –ê–Ω–¥—Ä–µ–µ–≤–∞  –∫–æ–º—É  –í—Å–µ:
	// 3. –ó–∞–¥–∞–π—Ç–µ –¥–≤—É–º–µ—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤. –ù–∞–π–¥–∏—Ç–µ —Å—É–º–º—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≥–ª–∞–≤–Ω–æ–π –¥–∏–∞–≥–æ–Ω–∞–ª–∏.	//    https://4apple.org/summa-diagonalnyh-jelementov-matricy/	//    https://ru.wikipedia.org/wiki/%D0%93%D0%BB%D0%B0%D0%B2%D0%BD%D0%B0%D1%8F_%D0%B4%D0%B8%D0%B0%D0%B3%D0%BE%D0%BD%D0%B0%D0%BB%D1%8C
21:09:06 –û—Ç Gulliver  –∫–æ–º—É  –í—Å–µ:
	+
21:09:15 –û—Ç Gulliver  –∫–æ–º—É  –í—Å–µ:
	—Ç–∞–∫ –∂–µ
21:12:08 –û—Ç –ú–∏—Ö–∞–∏–ª  –∫–æ–º—É  –í—Å–µ:
	int DiagonalSum(int[,] arr)	{	    int res = 0;	    for (int i = 0; i < arr.GetLength(0); i++)	    {	        res += arr[i, i];	    }	    return res;	}
21:22:32 –û—Ç –ò–ª—å—è –ñ–∞—Ä–∫–æ–≤  –∫–æ–º—É  –í—Å–µ:
	void Sum_massive(int[,] array)	{	    int sum = 0;	    if (array.GetLength(0) != array.GetLength(1))	    {	        Console.WriteLine("–Ω–µ –±—É–¥–µ—Ç —Ä–æ–≤–Ω–æ–π –¥–∏–∞–≥–æ–Ω–∞–ª–∏");	        return;	    }		    for (int i = 0; i < array.GetLength(0); i++)	    {	        for (int j = 0; j < array.GetLength(1); j++)	        {		            if (i == j)	            {	                sum = sum + array[i, j];	            }			        }	    }	    Console.Write($"{sum}");		}
21:23:45 –û—Ç –ú–∞—Ä–∏—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞ –ê–Ω–¥—Ä–µ–µ–≤–∞  –∫–æ–º—É  –í—Å–µ:
	// 4. –ó–∞–¥–∞–π—Ç–µ –¥–≤—É–º–µ—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤. –í–≤–µ–¥–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç, –∏ –Ω–∞–π–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ –µ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ,	//    –≤—ã–≤–µ–¥–∏—Ç–µ –ø–æ–∑–∏—Ü–∏–∏ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ –∏ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏, –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ —Ç–∞–∫–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–µ—Ç.
21:24:06 –û—Ç Gulliver  –∫–æ–º—É  –í—Å–µ:
	void IndexFirst(int[,] array)	{	    Console.WriteLine("–í–≤–µ–¥–∏—Ç–µ –∏—Å–∫–æ–º—ã–π —ç–ª–µ–º–µ–Ω—Ç ");	    int num = int.Parse(Console.ReadLine()!);	    for (int i = 0; i < array.GetLength(0); i++)	    {	        for (int j = 0; j < array.GetLength(1); j++)	        {	            if (num == array[i, j])	            {	                Console.WriteLine($"–í–≤–µ–¥–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç {num}, —Ä–µ–∑—É–ª—å—Ç–∞—Ç: [{i}, {j}]");	                return;	            }	        }	    }	        Console.WriteLine($"–í–≤–µ–¥–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç {num}, —Ä–µ–∑—É–ª—å—Ç–∞—Ç: —Ç–∞–∫–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–µ—Ç.");	}
21:25:38 –û—Ç –ö–∞–º–∏–ª—å –ú–∞–Ω–∞–ø–æ–≤  –∫–æ–º—É  –í—Å–µ:
	–º–æ–∂–Ω–æ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∫—Ä—É–ø–Ω–µ–µ. –ñ–∏–∑–Ω—å –æ—á–∫–∞—Ä–∏–∫–æ–≤ —Å–ª–æ–∂–Ω–∞)
21:26:53 –û—Ç –ö–∞–º–∏–ª—å –ú–∞–Ω–∞–ø–æ–≤  –∫–æ–º—É  –í—Å–µ:
	string
21:28:29 –û—Ç –ö–∞–º–∏–ª—å –ú–∞–Ω–∞–ø–æ–≤  –∫–æ–º—É  –í—Å–µ:
	–ø–æ–ª—É—á–∞–µ—Ç—Å—è –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ —Å–∏–º–≤–æ–ª $ —Ç–æ–ª—å–∫–æ –¥–ª—è string –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ?
21:31:17 –û—Ç Gulliver  –∫–æ–º—É  –í—Å–µ:
	–Ω–∞–º –∂–µ –Ω—É–∂–Ω—ã –Ω–µ –∏–Ω–¥–µ–∫—Å—ã –∞ –ø–æ–∑–∏—Ü–∏–∏?
21:33:10 –û—Ç –ú–∏—Ö–∞–∏–ª  –∫–æ–º—É  –í—Å–µ:
	// 4. –ó–∞–¥–∞–π—Ç–µ –¥–≤—É–º–µ—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤. –í–≤–µ–¥–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç, –∏ –Ω–∞–π–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ –µ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ,	//    –≤—ã–≤–µ–¥–∏—Ç–µ –ø–æ–∑–∏—Ü–∏–∏ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ –∏ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏, –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ —Ç–∞–∫–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–µ—Ç.			void PrintArray(int[,] matr)	{	    for (int i = 0; i < matr.GetLength(0); i++)	    {	        for (int j = 0; j < matr.GetLength(1); j++)	        {	            System.Console.Write($"{matr[i, j]} ");	        }	        System.Console.WriteLine();	    }	}		void FillArray(int[,] matr)	{	    for (int i = 0; i < matr.GetLength(0); i++)	    {	        for (int j = 0; j < matr.GetLength(1); j++)	        {	            matr[i, j] = new Random().Next(1, 10);	        }	    }		}
21:33:16 –û—Ç –ú–∏—Ö–∞–∏–ª  –∫–æ–º—É  –í—Å–µ:
	string FindNum(int[,] arr, int num)	{	    for (int i = 0; i < arr.GetLength(0); i++)	    {	        for (int j = 0; j < arr.GetLength(1); j++)	        {	            if (arr[i, j] == num) return $"[{i + 1}, {j + 1}]";	        }	    }	    return "Not find";	}			Console.WriteLine("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ ");	int m = int.Parse(Console.ReadLine()!);	Console.WriteLine("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ ");	int n = int.Parse(Console.ReadLine()!);	Console.WriteLine("–í–≤–µ–¥–∏—Ç–µ –∏—Å–∫–æ–º–æ–µ —á–∏—Å–ª–æ ");	int a = int.Parse(Console.ReadLine()!);	int[,] matrix = new int[m, n];		FillArray(matrix);	PrintArray(matrix);	System.Console.WriteLine();	System.Console.WriteLine(FindNum(matrix, a));
21:39:20 –û—Ç Evgeniy  –∫–æ–º—É  –í—Å–µ:
	== –ø–æ–ø—Ä–æ–±—É–π
21:40:35 –û—Ç –ö–∞–º–∏–ª—å –ú–∞–Ω–∞–ø–æ–≤  –∫–æ–º—É  –í—Å–µ:
	–ú–∞—Ä–∏—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞ —Å–ø–∞—Å–∏–±–æ –∑–∞ —É—Ä–æ–∫. –ò –≤—Å–µ–º –∫–æ–ª–ª–µ–≥–∞–º –∫—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–º –Ω–æ–≤–∏—á–∫–∞–º.
21:40:41 –û—Ç –ê–Ω–¥—Ä–µ–π –°.  –∫–æ–º—É  –í—Å–µ:
	–°–ø–∞—Å–∏–±–æ –±–æ–ª—å—à–æ–µ, –¥–æ —Å–≤–∏–¥–∞–Ω–∏—è
